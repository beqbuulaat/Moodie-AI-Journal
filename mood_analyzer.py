import os
import requests

OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")

def analyze_mood(text):
    if not OPENROUTER_API_KEY:
        print("‚ùå OPENROUTER_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

    prompt = f'–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–≤–µ—Ç—å –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º (—Ä–∞–¥–æ—Å—Ç–Ω–æ–µ, –≥—Ä—É—Å—Ç–Ω–æ–µ, —Ç—Ä–µ–≤–æ–∂–Ω–æ–µ, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –∏ —Ç.–¥.):\n"{text}"'

    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json",
        "HTTP-Referer": "https://moodie-ai-journal.onrender.com",  # —É–∫–∞–∂–∏ –∑–¥–µ—Å—å —Å–≤–æ–π URL
        "X-Title": "Moodie AI Journal"
    }

    body = {
        "model": "google/gemini-2.5-flash-lite",
        "messages": [
            {"role": "user", "content": prompt}
        ]
    }

    try:
        response = requests.post("https://openrouter.ai/api/v1/chat/completions", headers=headers, json=body)
        data = response.json()
        print("üîé –û—Ç–≤–µ—Ç –æ—Ç OpenRouter:", data)

        if "choices" in data and data["choices"]:
            mood = data["choices"][0]["message"]["content"].strip().lower()
            return mood
        else:
            print("‚ö†Ô∏è –í –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç –ø–æ–ª—è 'choices' –∏–ª–∏ –æ–Ω –ø—É—Å—Ç–æ–π")
            return "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ AI –∑–∞–ø—Ä–æ—Å–∞:", e)
        return "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
